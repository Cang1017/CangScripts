options:
    Version: 2.0
    File: plugins/Skript/scripts/SellUI

import:
    java.io.File
    java.net.URL
    java.util.Scanner
    
    de.unpixelt.locale.Translate

    org.bukkit.Bukkit
    org.bukkit.Material
    org.bukkit.block.ShulkerBox
    org.bukkit.inventory.ItemStack
    org.bukkit.inventory.meta.BlockStateMeta
    org.bukkit.configuration.file.YamlConfiguration

option System:
    get:
        return YamlConfiguration.loadConfiguration(new File("{@File}/Config.yml")).get("Settings.System")
option InvName:
    get:
        return YamlConfiguration.loadConfiguration(new File("{@File}/Config.yml")).get("Settings.InvName")
option Permission_Set:
    get:
        return YamlConfiguration.loadConfiguration(new File("{@File}/Config.yml")).get("Permission.Set")
option Permission_Use:
    get:
        return YamlConfiguration.loadConfiguration(new File("{@File}/Config.yml")).get("Permission.Use")
option Permission_Reload:
    get:
        return YamlConfiguration.loadConfiguration(new File("{@File}/Config.yml")).get("Permission.Reload")

on load:
    SellUI_reload()

function SellUI_reload():
    set {_Folder} to new File("{@File}")
    if {_Folder}.exists() is not true:
        {_Folder}.mkdirs()
        send "&a[Sell.sk] 找不到 .../SellUI/  創建 .../SellUI/ 中..." to console
    set {_File} to new File("{@File}/Items.yml")
    if {_File}.exists() is not true:
        {_File}.createNewFile()
        send "&a[Sell.sk] 找不到 Items.yml  創建 Items.yml 中..." to console
   #Config
    set {_File} to new File("{@File}/Config.yml")
    if {_File}.exists() is not true:
        {_File}.createNewFile()
        send "&a[Sell.sk] 找不到 Config.yml  創建 Config.yml 中..." to console

    set {_YML} to YamlConfiguration.loadConfiguration({_File})
    if {_YML}.isSet("Settings.System") is false:
        {_YML}.set("Settings.System","&f&l╭&c&l[&b&l!&c&l]&e&l◢ ")
        set {_save} to true
    if {_YML}.isSet("Settings.InvName") is false:
        {_YML}.set("Settings.InvName","&9&l物品販售選單")
        set {_save} to true
    if {_YML}.isSet("Permission.Set") is false:
        {_YML}.set("Permission.Set","SellUI.Admin")
        set {_save} to true
    if {_YML}.isSet("Permission.Reload") is false:
        {_YML}.set("Permission.Reload","SellUI.Admin")
        set {_save} to true
    if {_YML}.isSet("Permission.Use") is false:
        {_YML}.set("Permission.Use","SellUI.Use")
        set {_save} to true
    {_save} is true:
        {_YML}.save({_File})

function checkVersion():
    set {_url} to new URL("https://raw.githubusercontent.com/Cang1017/CangScripts/main/SellUI/SellUI.sk")
    set {_scanner} to new Scanner({_url}.openStream())
    broadcast "%{_scanner}.nextLine()%"

command /SellUI [<text>] [<text>]:
    trigger:
        arg 1 is "reload":
            if player have permission "{@Permission_Reload}":
                SellUI_reload()
                send "{@System} &a重新載入完成."
            stop
        arg 1 is "set":
            if player have permission "{@Permission_Set}":
                set {_arg2} to arg 2 parsed as number
                if player's tool is air:
                    send "{@System} &c請將欲設定物品拿在主手"
                else if {_arg2} is set:
                    set {_YML} to YamlConfiguration.loadConfiguration(new File("{@File}/Items.yml"))
                    set {_i} to player's tool
                    {_YML}.set("%{_i}.getType()%",{_arg2})
                    {_YML}.save(new File("{@File}/Items.yml"))
                    send "{@System} &a物品設置完成"
                else:
                    send "{@System} &c用法: /SellUI set <wepon price>"
                stop
            else:
                send "{@System} &c您沒有權限使用這個指令"
        else:
            if player have permission "{@Permission_Use}":
                open chest inventory with 6 rows named "{@InvName}" to player
                if {sound::%player%} is true:
                    play sound "minecraft:entity.item.pickup" to player
                    delete {sound::%player%}
                else:
                    play sound "minecraft:item.book.page_turn" to player
                set {_inv} to current inventory of player
                loop 9 times:
                    set slot 9 - loop-value of {_inv} to black glass pane named "&0"
                    set slot 54 - loop-value of {_inv} to black glass pane named "&0"
                if {check::%player%} is true:
                    set slot 53 of {_inv} to cherry chest boat named "&f販售身上全部的物品&c ┓" with lore " " and "&b┗ &e點擊販售 &d包含界伏盒"
                else:
                    set slot 53 of {_inv} to cherry boat named "&f販售身上全部的物品&c ┓" with lore " " and "&b┗ &e點擊販售 &7不含界伏盒"
                set slot 49 of {_inv} to structure void named "&f關閉選單&c ┓" with lore " " and "&b┗ &e點擊關閉"
                if {check::%player%} is true:
                    set slot 45 of {_inv} to axolotl bucket named "&f販售界伏盒物品&c ┓" with lore " " and "&b┗ &e目前狀態為 &a開啟"
                else:
                    set slot 45 of {_inv} to water bucket named "&f販售界伏盒物品&c ┓" with lore " " and "&b┗ &e目前狀態為 &c關閉"
                set {_YML} to YamlConfiguration.loadConfiguration(new File("{@File}/Items.yml"))
                loop all items in player's inventory where [ {_YML}.get("%input.getItem().getType()%") is set ]:
                    loop-value.getItem().hasItemMeta() is false:
                        set {_items::%type of loop-value%} to type of loop-value
                        set {_items::%type of loop-value%::type} to loop-value.getItem().getType()
                        add item amount of loop-value to {_items::%type of loop-value%::amount}
                if {check::%player%} is true:
                    loop all items in player's inventory where [ type of input is any shulker box ]:
                        set {_box} to loop-value.getItem().getItemMeta().getBlockState().getInventory().getContents()
                        loop ...{_box}:
                            loop-value-2.hasItemMeta() is false:
                                if {_YML}.get("%loop-value-2.getType()%") is set:
                                    set {_items::%type of new ItemStack(loop-value-2.getType(),1)%} to type of new ItemStack(loop-value-2.getType(),1)
                                    set {_items::%type of new ItemStack(loop-value-2.getType(),1)%::type} to loop-value-2.getType()
                                    add loop-value-2.getAmount() to {_items::%type of new ItemStack(loop-value-2.getType(),1)%::amount}
                set {_pos} to 9
                loop {_items::*}:
                    set {_Price} to {_YML}.get("%{_items::%loop-value%::type}%")
                    set {_Name} to Translate.getMaterial(player, {_items::%loop-value%::type})
                    set {_amount} to {_items::%loop-value%::amount}
                    if {check::%player%} is true:
                        set slot {_pos} of {_inv} to loop-value named "&7&l| &f%{_Name}%" with lore "%nl%&f&l| &6販售單價 &7&l▸ &e$%{_Price}%%nl%%nl%&f&l| &b目前持有 &7&l▸ &cx %{_amount}% &d➩ 包含界伏盒%nl%%nl%&f&l| &a滑鼠左鍵或右鍵點擊販售" 
                    else:
                        set slot {_pos} of {_inv} to loop-value named "&7&l| &f%{_Name}%" with lore "%nl%&f&l| &6販售單價 &7&l▸ &e$%{_Price}%%nl%%nl%&f&l| &b目前持有 &7&l▸ &cx %{_amount}%%nl%%nl%&f&l| &a滑鼠左鍵或右鍵點擊販售" 
                    add 1 to {_pos}
                stop
            else:
                send "{@System} &c您沒有權限使用這個指令"
on inventory click:
    if name of player's current inventory is "{@InvName}":
        cancel event
        clicked inventory is not player's inventory
        set {_YML} to YamlConfiguration.loadConfiguration(new File("{@File}/Items.yml"))
        event-item is set
        clicked slot <= 43:
            clicked slot >= 9
            set {_Price} to {_YML}.get("%event-item.getType()%")
            loop all items in player's inventory where [ input.getItem().getType() is event-item.getType() ]:
                loop-value.getItem().hasItemMeta() is false:
                    add item amount of loop-value * {_Price} to {_money}
                    remove loop-value from player's inventory
            if {check::%player%} is true:
                loop all items in player's inventory where [ type of input is any shulker box ]:
                    set {_item} to loop-value.getItem()
                    set {_meta} to {_item}.getItemMeta()
                    set {_BState} to {_meta}.getBlockState()
                    set {_inv} to {_BState}.getInventory()
                    loop 27 times:
                        set {_Slot} to loop-value-2 - 1
                        {_inv}.getItem({_Slot}).hasItemMeta() is false:
                            {_inv}.getItem({_Slot}).getType() is event-item.getType():
                                add {_inv}.getItem({_Slot}).getAmount() * {_Price} to {_money}
                                {_inv}.setItem({_Slot},new ItemStack(Material.AIR))
                    {_meta}.setBlockState({_BState})
                    {_item}.setItemMeta({_meta})
                    loop-value.setItem({_item})
            add {_money} to account of player
            set {_Name} to name of clicked slot
            replace all "&7&l| &f" in {_Name} with ""
            set {_amount} to line 4 of lore of clicked slot
            replace all "&f&l| &b目前持有 &7&l▸ &cx " in {_amount} with ""
            replace all " &d➩ 包含界伏盒" in {_amount} with ""
            send "{@System} &d交易明細 &7- &a&l[+] &e$%{_money}% &7| &c&l[-] &b%{_Name}% x %{_amount}%"
            play sound "minecraft:entity.item.pickup" to player
            close player's inventory
            stop
        clicked slot = 45:
            if {check::%player%} is not true:
                set {check::%player%} to true
            else if {check::%player%} is true:
                delete {check::%player%}
            set {sound::%player%} to true
            make player execute command "/sellui"
            stop
        clicked slot = 53:
            loop all items in player's inventory where [ {_YML}.get("%input.getItem().getType()%") is set ]:
                loop-value.getItem().hasItemMeta() is false:
                    set {_Price} to {_YML}.get("%loop-value.getItem().getType()%")
                    add item amount of loop-value * {_Price} to {_money}
                   #
                    set {_Name} to Translate.getMaterial(player, loop-value.getItem().getType())
                    set {_amount} to item amount of loop-value
                   #
                    set {_List::%{_Name}%} to {_Name}
                    add {_amount} to {_List::%{_Name}%::amount}
                   #
                    remove loop-value from player's inventory
            if {check::%player%} is true:
                loop all items in player's inventory where [ type of input is any shulker box ]:
                    set {_item} to loop-value-1.getItem()
                    set {_meta} to {_item}.getItemMeta()
                    set {_BState} to {_meta}.getBlockState()
                    set {_inv} to {_BState}.getInventory()
                    loop 27 times:
                        set {_Slot} to loop-value-2 - 1
                        {_inv}.getItem({_Slot}).hasItemMeta() is false:
                            {_YML}.get("%{_inv}.getItem({_Slot}).getType()%") is set:
                                set {_Name} to Translate.getMaterial(player, {_inv}.getItem({_Slot}).getType())
                                set {_amount} to {_inv}.getItem({_Slot}).getAmount()
                                set {_List::%{_Name}%} to {_Name}
                                add {_amount} to {_List::%{_Name}%::amount}
                                set {_Price} to {_YML}.get("%{_inv}.getItem({_Slot}).getType()%")
                                add {_inv}.getItem({_Slot}).getAmount() * {_Price} to {_money}
                                {_inv}.setItem({_Slot},new ItemStack(Material.AIR))
                    {_meta}.setBlockState({_BState})
                    {_item}.setItemMeta({_meta})
                    loop-value.setItem({_item})

            {_money} is not set:
                send "&f&l╭&c&l[&b&l!&c&l]&e&l◢ &c您的物品不足無法販售" to player
                close player's inventory
                play sound "minecraft:block.note_block.bass" to player
                stop
            add {_money} to account of player
            set {_text} to "!"
            loop {_List::*}:
                set {_text} to "&b%{_text}%%nl%%loop-value% x %{_List::%loop-value%::amount}%"
            replace all "!%nl%" in {_text} with ""
            send formatted "{@System} &d交易明細 &7- &a&l[+] &e$%{_money}% &7| <tooltip:%{_text}%>&f&l[&c瞄準這裡查看販賣的內容&f&l]<reset>"
            close player's inventory
            play sound "minecraft:entity.item.pickup" to player
            stop
        clicked slot = 49:
            close player's inventory
            play sound "minecraft:entity.item.pickup" to player
            stop